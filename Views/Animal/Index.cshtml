
@{
    Layout = "_Layout";
    ViewData["Title"] = "Animals";
}

@model List<Models.Animal>

<section class="list-container">
    <div class="modal fade" id="userRemoveModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Remove user</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                </div>
                <div class="modal-body">
                    <span>Confirm exclusion?</span>
                </div>
                <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger">Confirm</button>
                </div>
            </div>
        </div>
    </div>
    <h2>Animal</h2>
    <ul class="list">
        <li class="list-row list-header">
            <div class="list-item">
                <span class="list-data">Id</span>
            </div>
            <div class="list-item">
                <span class="list-data">Name</span>
            </div>
            <div class="list-item">
                <span class="list-data">Scientific Name</span>
            </div>
            <div class="list-item">
                <span class="list-data list-btn">Edit</span>
            </div>
            <div class="list-item">
                <span class="list-data list-btn">Remove</span>
            </div>
        </li>
        @foreach (var animal in Model)
        {
            @await Component.InvokeAsync("Animal", animal)
        }
    </ul>
</section>